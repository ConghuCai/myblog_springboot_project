(function(e){function t(t){for(var r,a,c=t[0],s=t[1],u=t[2],l=0,d=[];l<c.length;l++)a=c[l],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&d.push(o[a][0]),o[a]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);g&&g(t);while(d.length)d.shift()();return i.push.apply(i,u||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,a=1;a<n.length;a++){var c=n[a];0!==o[c]&&(r=!1)}r&&(i.splice(t--,1),e=s(s.s=n[0]))}return e}var r={},a={app:0},o={app:0},i=[];function c(e){return s.p+"js/"+({}[e]||e)+"."+{"chunk-0ac75fc3":"ab5e7974","chunk-2d22fd04":"76a626a1","chunk-439c69c2":"13970de0","chunk-4892d581":"7946346b","chunk-50301885":"eafd06a9","chunk-67dda09e":"f65f774b","chunk-70d70d79":"cf2c03aa"}[e]+".js"}function s(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.e=function(e){var t=[],n={"chunk-0ac75fc3":1,"chunk-439c69c2":1,"chunk-4892d581":1,"chunk-50301885":1,"chunk-67dda09e":1,"chunk-70d70d79":1};a[e]?t.push(a[e]):0!==a[e]&&n[e]&&t.push(a[e]=new Promise((function(t,n){for(var r="css/"+({}[e]||e)+"."+{"chunk-0ac75fc3":"701aba96","chunk-2d22fd04":"31d6cfe0","chunk-439c69c2":"fc29db6d","chunk-4892d581":"8ebc176e","chunk-50301885":"7e3b7969","chunk-67dda09e":"701aba96","chunk-70d70d79":"13d5dd42"}[e]+".css",o=s.p+r,i=document.getElementsByTagName("link"),c=0;c<i.length;c++){var u=i[c],l=u.getAttribute("data-href")||u.getAttribute("href");if("stylesheet"===u.rel&&(l===r||l===o))return t()}var d=document.getElementsByTagName("style");for(c=0;c<d.length;c++){u=d[c],l=u.getAttribute("data-href");if(l===r||l===o)return t()}var g=document.createElement("link");g.rel="stylesheet",g.type="text/css",g.onload=t,g.onerror=function(t){var r=t&&t.target&&t.target.src||o,i=new Error("Loading CSS chunk "+e+" failed.\n("+r+")");i.code="CSS_CHUNK_LOAD_FAILED",i.request=r,delete a[e],g.parentNode.removeChild(g),n(i)},g.href=o;var p=document.getElementsByTagName("head")[0];p.appendChild(g)})).then((function(){a[e]=0})));var r=o[e];if(0!==r)if(r)t.push(r[2]);else{var i=new Promise((function(t,n){r=o[e]=[t,n]}));t.push(r[2]=i);var u,l=document.createElement("script");l.charset="utf-8",l.timeout=120,s.nc&&l.setAttribute("nonce",s.nc),l.src=c(e);var d=new Error;u=function(t){l.onerror=l.onload=null,clearTimeout(g);var n=o[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;d.message="Loading chunk "+e+" failed.\n("+r+": "+a+")",d.name="ChunkLoadError",d.type=r,d.request=a,n[1](d)}o[e]=void 0}};var g=setTimeout((function(){u({type:"timeout",target:l})}),12e4);l.onerror=l.onload=u,document.head.appendChild(l)}return Promise.all(t)},s.m=e,s.c=r,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s.oe=function(e){throw console.error(e),e};var u=window["webpackJsonp"]=window["webpackJsonp"]||[],l=u.push.bind(u);u.push=t,u=u.slice();for(var d=0;d<u.length;d++)t(u[d]);var g=l;i.push([0,"chunk-vendors"]),n()})({0:function(e,t,n){e.exports=n("56d7")},"142b":function(e,t,n){},"1e39":function(e,t,n){"use strict";n("bd7c")},"275f":function(e,t,n){},"2be5":function(e,t,n){"use strict";n("142b")},"498d":function(e,t,n){"use strict";n("81e0")},"56d7":function(e,t,n){"use strict";n.r(t);n("f7f2"),n("73ab");var r=n("e762"),a=n.n(r),o=(n("b9c0"),n("691e")),i=n.n(o),c=(n("8997"),n("440e")),s=n.n(c),u=(n("84cf"),n("682c")),l=n.n(u),d=(n("73d2"),n("d75c")),g=n.n(d),p=(n("36ad"),n("abb5")),m=n.n(p),h=(n("096b"),n("bf6d")),f=n.n(h),b=(n("73d0"),n("de4c")),v=n.n(b),w=(n("0c22"),n("d1ce")),y=n.n(w),k=(n("ab97"),n("976c")),C=n.n(k),_=(n("a7ce"),n("3898")),S=n.n(_),j=(n("96b8"),n("447f")),R=n.n(j),T=(n("eae8"),n("62cb")),q=n.n(T),x=(n("35d3"),n("cf7c")),J=n.n(x),M=(n("2985"),n("a5dc")),I=n.n(M),L=(n("abfe"),n("c995")),O=n.n(L),U=(n("3e1f"),n("5ee1")),N=n.n(U),E=(n("7dd7"),n("a32f")),A=n.n(E),$=(n("13e6"),n("c5e8")),G=n.n($),D=(n("64ce"),n("e18e")),P=n.n(D),B=(n("85df"),n("1518")),z=n.n(B),V=(n("83a7"),n("2650")),H=n.n(V),F=(n("7375"),n("7e78")),X=n.n(F),K=(n("9ddb"),n("ce0f")),W=n.n(K),Q=(n("8333"),n("e2f4")),Y=n.n(Q),Z=(n("b8a8"),n("3e8b")),ee=n.n(Z),te=(n("5bde"),n("5048")),ne=n.n(te),re=(n("7f46"),n("49f4")),ae=n.n(re),oe=(n("52ac"),n("2cc1")),ie=n.n(oe),ce=(n("0832"),n("eb01")),se=n.n(ce),ue=(n("9afa"),n("3bdf")),le=n.n(ue),de=(n("73a2"),n("4917")),ge=n.n(de),pe=(n("e260"),n("e6cf"),n("cca6"),n("a79d"),n("2b0e")),me=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"app"}},[n("router-view")],1)},he=[],fe={data:function(){return{radio:"1"}}},be=fe,ve=(n("5c0b"),n("2877")),we=Object(ve["a"])(be,me,he,!1,null,null,null),ye=we.exports,ke=n("9483");Object(ke["a"])("".concat("","service-worker.js"),{ready:function(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered:function(){console.log("Service worker has been registered.")},cached:function(){console.log("Content has been cached for offline use.")},updatefound:function(){console.log("New content is downloading.")},updated:function(){console.log("New content is available; please refresh.")},offline:function(){console.log("No internet connection found. App is running in offline mode.")},error:function(e){console.error("Error during service worker registration:",e)}});n("d3b7"),n("3ca3"),n("ddb0");var Ce=n("8c4f"),_e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("el-container",{staticStyle:{height:"100%"}},[n("el-aside",{attrs:{width:"auto"}},[n("common-aside")],1),n("el-container",[n("el-header",[n("common-header")],1),n("el-main",[n("router-view")],1)],1)],1)},Se=[],je=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("el-menu",{staticClass:"el-menu-vertical-demo",attrs:{collapse:e.isCollapse,"background-color":"#545c64","text-color":"#fff","active-text-color":"#fff","unique-opened":""}},[n("div",{staticClass:"title-img"},[n("el-avatar",{attrs:{size:50,src:e.title.avatar}})],1),e.isCollapse?n("h3",[e._v(e._s(e.title.sname))]):n("h3",[e._v(e._s(e.title.name))]),e._l(e.noChildren,(function(t){return n("el-menu-item",{key:t.path,attrs:{index:t.path},on:{click:function(n){return e.clickMenu(t)}}},[n("i",{class:"el-icon-"+t.icon}),n("span",{attrs:{slot:"title"},slot:"title"},[e._v(e._s(t.label))])])})),e._l(e.hasChildren,(function(t){return n("el-submenu",{key:t.path,attrs:{index:t.label}},[n("template",{slot:"title"},[n("i",{class:"el-icon-"+t.icon}),n("span",{attrs:{slot:"title"},slot:"title"},[e._v(e._s(t.label))])]),n("el-menu-item-group",e._l(t.children,(function(t,r){return n("el-menu-item",{key:r,attrs:{index:t.path},on:{click:function(n){return e.clickMenu(t)}}},[n("i",{class:"el-icon-"+t.icon}),n("span",{attrs:{slot:"title"},slot:"title"},[e._v(e._s(t.label))])])})),1)],2)})),n("el-menu-item",{attrs:{index:"1"},on:{click:function(t){return e.clickMenuAbout()}}},[n("i",{staticClass:"el-icon-odometer"}),n("span",{attrs:{slot:"title"},slot:"title"},[e._v("关于网站")])])],2)},Re=[],Te=(n("b0c0"),n("4de4"),n("7e1e")),qe={data:function(){return{title:{},menu:[]}},methods:{getMenuData:function(){var e=this;console.log("获取菜单数据"),Object(Te["m"])().then((function(t){e.title=t.data.title,e.menu=t.data.menu}))},clickMenu:function(e){if("main"===e.name)this.$router.push({name:"main",query:{user:this.$route.query.user}});else{var t=e.name;this.$router.push({name:"category",params:{categoryName:t},query:{user:this.$route.query.user}})}},clickMenuAbout:function(){this.$router.push({name:"about",query:{user:this.$route.query.user}})}},mounted:function(){this.getMenuData()},computed:{noChildren:function(){return this.menu.filter((function(e){return!e.children}))},hasChildren:function(){return this.menu.filter((function(e){return e.children}))},isCollapse:function(){return this.$store.state.tab.isCollapse}}},xe=qe,Je=(n("2be5"),Object(ve["a"])(xe,je,Re,!1,null,"0ad31284",null)),Me=Je.exports,Ie=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("header",[n("div",{staticClass:"l-content"},[n("el-button",{attrs:{plain:"",icon:"el-icon-menu",size:"mini"},on:{click:e.handleMenu}}),n("h3",{staticStyle:{color:"#fff"}},[e._v(e._s(e.getPageName))])],1),n("div",{staticClass:"r-content",staticStyle:{display:"inline-flex"}},[n("div",{staticStyle:{"margin-right":"30px","margin-top":"8px"}},[n("el-input",{staticStyle:{width:"200px","margin-right":"10px"},attrs:{placeholder:"search for something...","prefix-icon":"el-icon-search",size:"mini"},model:{value:e.keyword,callback:function(t){e.keyword=t},expression:"keyword"}}),n("el-button",{attrs:{icon:"el-icon-search",size:"mini",circle:"",type:"info"},on:{click:function(t){return e.searchKeyword(e.keyword)}}})],1),n("div",[e.getLoginState?n("el-dropdown",{attrs:{trigger:"click",size:"mini"}},[n("span",{staticClass:"el-dropdown-link"},[n("img",{staticClass:"user",attrs:{src:e.getAvatar}})]),n("el-dropdown-menu",{attrs:{slot:"dropdown"},slot:"dropdown"},[n("el-dropdown-item",{attrs:{disabled:!0}},[e._v(e._s(e.getUserName))]),n("el-dropdown-item",{nativeOn:{click:function(t){return e.openWindow(e.getGiteePage)}}},[e._v("我的主页")]),n("el-dropdown-item",{nativeOn:{click:function(t){return e.exitLogin.apply(null,arguments)}}},[e._v("退出登录")])],1)],1):n("el-dropdown",{attrs:{trigger:"click",size:"mini"}},[n("span",{staticClass:"el-dropdown-link"},[n("img",{staticClass:"user",attrs:{src:"http://139.196.140.100:8080/image-base/myblog/home/gitee_logo.jpg"}})]),n("el-dropdown-menu",{attrs:{slot:"dropdown"},slot:"dropdown"},[n("el-dropdown-item",{nativeOn:{click:function(t){return e.handleLogin.apply(null,arguments)}}},[e._v("登录Gitee")])],1)],1)],1)])])},Le=[],Oe={data:function(){return{keyword:""}},methods:{handleMenu:function(){this.$store.commit("collapseMenu")},handleLogin:function(){Object(Te["o"])(window.location.origin).then((function(e){window.location.href=e.data.authorizeUrl}))},searchKeyword:function(e){""!==e?(this.$router.push({name:"search",params:{keyword:e},query:{user:this.$route.query.user}}),this.keyword=""):this.$notify({message:"告诉我您需要搜点儿啥呢...",duration:2e3,position:"bottom-left"})},openWindow:function(e){var t=window.open(e);window.focus&&t.focus()},exitLogin:function(){window.location.href=window.location.origin}},computed:{getPageName:function(){return this.$store.state.tab.pageName},getLoginState:function(){return this.$store.state.tab.hasLogined},getUserName:function(){return this.$store.state.tab.userName},getGiteePage:function(){return this.$store.state.tab.giteeUrl},getAvatar:function(){return this.$store.state.tab.avatarUrl}},mounted:function(){var e=this,t=this.$route.query.user,n=this.$route.query.code;console.log(n),void 0!==t?(console.log("已登录"),Object(Te["r"])(t).then((function(t){void 0!==t.data.userInfo?(console.log("数据库处获取到用户信息"),e.$store.commit("login",{login:!0,name:t.data.userInfo.login,gitee:t.data.userInfo.html_url,avatar:t.data.userInfo.avatar_url})):e.$alert("您的登录已过期！/(ㄒoㄒ)/~~，重新登陆试试吧~","登录失败",{confirmButtonText:"Roger That! ",callback:function(){window.location.href=window.location.origin}})}))):void 0!==n?(console.log("携带登录code"),console.log("向gitee申请用户账号信息"),Object(Te["l"])(n).then((function(t){if(void 0!==t.data.loginInfo){console.log("gitee处获取到用户信息"),e.$store.commit("login",{login:!0,name:t.data.loginInfo.login,gitee:t.data.loginInfo.html_url,avatar:t.data.loginInfo.avatar_url});var n={path:"/",query:{user:t.data.loginInfo.login}};e.$router.push({name:"router",query:n})}else e.$alert("向Gitee申请账号失败了/(ㄒoㄒ)/~~，重新登陆试试吧~","授权失败",{confirmButtonText:"Roger That! ",callback:function(){window.location.href=window.location.origin}})}))):console.log("未登录")}},Ue=Oe,Ne=(n("1e39"),Object(ve["a"])(Ue,Ie,Le,!1,null,"51d8e876",null)),Ee=Ne.exports,Ae={name:"Main",components:{CommonAside:Me,CommonHeader:Ee}},$e=Ae,Ge=(n("498d"),Object(ve["a"])($e,_e,Se,!1,null,"7b82fe76",null)),De=Ge.exports;pe["default"].use(Ce["a"]);var Pe=Ce["a"].prototype.push;Ce["a"].prototype.push=function(e){return Pe.call(this,e).catch((function(e){return e}))};var Be=[{path:"/",name:"Main",component:De,children:[{path:"/",name:"main",component:function(){return n.e("chunk-4892d581").then(n.bind(null,"1c62"))}},{path:"/category/:categoryName",name:"category",component:function(){return n.e("chunk-439c69c2").then(n.bind(null,"397a"))}},{path:"/article/:id",name:"article",component:function(){return n.e("chunk-50301885").then(n.bind(null,"19e3"))}},{path:"/tag/:tagName",name:"tag",component:function(){return n.e("chunk-67dda09e").then(n.bind(null,"2b8d"))}},{path:"/search/:keyword",name:"search",component:function(){return n.e("chunk-0ac75fc3").then(n.bind(null,"cb80"))}},{path:"/router",name:"router",component:function(){return n.e("chunk-2d22fd04").then(n.bind(null,"ea2d"))}},{path:"/about",name:"about",component:function(){return n.e("chunk-70d70d79").then(n.bind(null,"f820"))}}]}],ze=new Ce["a"]({mode:"history",base:"/",routes:Be}),Ve=ze,He=n("2f62"),Fe={state:{isCollapse:!1,pageName:"首页",hasLogined:!1,userName:"222",giteeUrl:"222",avatarUrl:"1231231"},mutations:{collapseMenu:function(e){e.isCollapse=!e.isCollapse},getPageName:function(e,t){e.pageName=t},login:function(e,t){t.login&&(e.hasLogined=!0,e.userName=t.name,e.giteeUrl=t.gitee,e.avatarUrl=t.avatar)}}};pe["default"].use(He["a"]);var Xe=new He["a"].Store({modules:{tab:Fe}}),Ke=n("9035"),We=n.n(Ke);n("275f");pe["default"].use(ge.a),pe["default"].use(le.a),pe["default"].use(se.a),pe["default"].use(ie.a),pe["default"].use(ae.a),pe["default"].use(ne.a),pe["default"].use(ee.a),pe["default"].use(Y.a),pe["default"].use(W.a),pe["default"].use(X.a),pe["default"].use(H.a),pe["default"].use(z.a),pe["default"].use(P.a),pe["default"].use(G.a),pe["default"].use(A.a),pe["default"].use(N.a),pe["default"].use(O.a),pe["default"].use(I.a),pe["default"].use(J.a),pe["default"].use(q.a),pe["default"].use(R.a),pe["default"].use(S.a),pe["default"].use(C.a),pe["default"].use(y.a),pe["default"].use(v.a),pe["default"].use(f.a),pe["default"].use(m.a),pe["default"].use(g.a),pe["default"].use(l.a),pe["default"].config.productionTip=!1,pe["default"].prototype.$http=We.a,pe["default"].prototype.$msgbox=s.a,pe["default"].prototype.$alert=s.a.alert,pe["default"].prototype.$confirm=s.a.confirm,pe["default"].prototype.$prompt=s.a.prompt,pe["default"].prototype.$notify=i.a,pe["default"].prototype.$message=a.a,n("c8c2"),new pe["default"]({router:Ve,store:Xe,render:function(e){return e(ye)}}).$mount("#app")},"5c0b":function(e,t,n){"use strict";n("9c0c")},"7e1e":function(e,t,n){"use strict";n.d(t,"m",(function(){return l})),n.d(t,"p",(function(){return d})),n.d(t,"n",(function(){return g})),n.d(t,"b",(function(){return p})),n.d(t,"q",(function(){return m})),n.d(t,"k",(function(){return h})),n.d(t,"h",(function(){return f})),n.d(t,"o",(function(){return b})),n.d(t,"l",(function(){return v})),n.d(t,"r",(function(){return w})),n.d(t,"g",(function(){return y})),n.d(t,"f",(function(){return k})),n.d(t,"c",(function(){return C})),n.d(t,"d",(function(){return _})),n.d(t,"j",(function(){return S})),n.d(t,"a",(function(){return j})),n.d(t,"i",(function(){return R})),n.d(t,"e",(function(){return T}));var r=n("5530"),a=n("d4ec"),o=n("bee2"),i=(n("d3b7"),n("9035")),c=n.n(i),s=function(){function e(){Object(a["a"])(this,e)}return Object(o["a"])(e,[{key:"getInsideConfig",value:function(){var e={header:{}};return e}},{key:"interceptors",value:function(e){e.interceptors.request.use((function(e){return e}),(function(e){return Promise.reject(e)})),e.interceptors.response.use((function(e){return e.data}),(function(e){return console.log(e),Promise.reject(e)}))}},{key:"request",value:function(e){var t=c.a.create();return e=Object(r["a"])(Object(r["a"])({},this.getInsideConfig()),e),this.interceptors(t),t(e)}}]),e}(),u=new s,l=function(){return u.request({url:"/home/menu",method:"get"})},d=function(){return u.request({url:"/home/owner",method:"get"})},g=function(){return u.request({url:"/home/message/list",method:"get"})};function p(e,t){return u.request({url:"/home/message/add",method:"post",params:{login:t,msg:e}})}var m=function(){return u.request({url:"/home/tag",method:"get"})},h=function(){return u.request({url:"/home/link",method:"get"})};function f(){return u.request({url:"/api/home/carousel",method:"get"})}function b(e){return u.request({url:"/api/auth/gitee",method:"get",params:{url:e}})}function v(e){return u.request({url:"/api/auth/login",method:"post",params:{code:e}})}function w(e){return u.request({url:"/api/auth/user/"+e,method:"post"})}function y(e,t,n){var r="";return r="all"===e?"list/all":"list/"+e+"/"+t,u.request({url:"/api/article/"+r,method:"get",params:{page:n}})}function k(e){return u.request({url:"/api/article/content/"+e,method:"get"})}function C(e){return u.request({url:"/api/article/like/"+e,method:"get"})}function _(e){return u.request({url:"/api/article/share/"+e,method:"get"})}function S(e){return u.request({url:"/api/article/comment/list/"+e,method:"get"})}function j(e,t,n){return u.request({url:"/api/article/comment/add",method:"post",params:{articleID:e,comm:t,user:n}})}function R(e){return u.request({url:"/api/category/info/"+e,method:"get"})}function T(){return u.request({url:"/api/about/info",method:"get"})}},"81e0":function(e,t,n){},"9c0c":function(e,t,n){},bd7c:function(e,t,n){},c8c2:function(e,t,n){"use strict";n.r(t);n("4d63"),n("c607"),n("ac1f"),n("2c3e"),n("25f0");var r=n("03a1"),a=n.n(r),o={getStatisticalMenuData:function(){return{code:2e4,data:{title:{name:"蔡同学的小站",sname:"CBlog",avatar:"http://47.96.39.11:8080/image-base/myblog/home/logo.png"},menu:[{path:"/",name:"main",label:"首页",icon:"s-home"},{label:"后端技术",icon:"s-operation",children:[{path:"/java",name:"java",label:"JAVA",icon:"caret-right"},{path:"/python",name:"python",label:"PYTHON",icon:"caret-right"},{path:"/golang",name:"golang",label:"GOLANG",icon:"caret-right"},{path:"/cpp",name:"cpp",label:"C++",icon:"caret-right"}]},{label:"前端技术",icon:"s-marketing",children:[{path:"/javascript",name:"javascript",label:"JavaScript",icon:"caret-right"},{path:"/jquery",name:"jquery",label:"JQuery",icon:"caret-right"},{path:"/vue",name:"vue",label:"VUE",icon:"caret-right"}]},{label:"数据库",icon:"coin",children:[{path:"/mysql",name:"mysql",label:"MySql",icon:"caret-right"},{path:"/mssql",name:"mssql",label:"MSSql",icon:"caret-right"},{path:"/redis",name:"redis",label:"Redis",icon:"caret-right"}]},{label:"计算机基础",icon:"notebook-1",children:[{path:"/algorithm",name:"algorithm",label:"数据结构和算法",icon:"caret-right"},{path:"/os",name:"os",label:"操作系统基础",icon:"caret-right"},{path:"/linux",name:"linux",label:"Linux",icon:"caret-right"},{path:"/network",name:"network",label:"计算机网络",icon:"caret-right"}]},{label:"人工智能",icon:"cpu",children:[{path:"/eeg",name:"eeg",label:"EEG情感计算",icon:"caret-right"},{path:"/cv",name:"cv",label:"计算机视觉",icon:"caret-right"}]},{label:"深度好文",icon:"collection-tag",children:[{path:"/collection",name:"collection",label:"博主收藏",icon:"caret-right"}]},{label:"杂项",icon:"coordinate",children:[{path:"/movie",name:"movie",label:"观影感受",icon:"caret-right"},{path:"/music",name:"music",label:"天涯何处觅知音",icon:"caret-right"}]}]}}},getStatisticalOwnerData:function(){return{code:2e4,data:{ownerInfo:{name:"小蔡同学",access:"博主",introduction:"欢迎你！这是我的小站，博主目前在读研中，欢迎技术交流！",location:"合肥 · 合肥工业大学",avatar:"http://47.96.39.11:8080/image-base/myblog/home/front.jpg"}}}},getStatisticalLeaveCommentData:function(){return{code:2e4,data:{leaveCommentData:[{userName:"小鲁",message:"hello world!hello world!hello world!hello world!hello world!hello world!hello world!hello world!hello world!",time:"2021-11-28 14:13:49",avatar:"https://portrait.gitee.com/uploads/avatars/user/3295/9887341_conghucai_1634639623.png"},{userName:"小宝",message:"hello world!",time:"2021-11-28 14:13:49",avatar:"https://portrait.gitee.com/uploads/avatars/user/3295/9887341_conghucai_1634639623.png"},{userName:"小蓓",message:"hello world!",time:"2021-11-17",avatar:"https://portrait.gitee.com/uploads/avatars/user/3295/9887341_conghucai_1634639623.png"},{userName:"小飞",message:"hello world!",time:"2021-11-17",avatar:"https://portrait.gitee.com/uploads/avatars/user/3295/9887341_conghucai_1634639623.png"},{userName:"小帅",message:"hello world!",time:"2021-11-17",avatar:"https://portrait.gitee.com/uploads/avatars/user/3295/9887341_conghucai_1634639623.png"}],leaveCommentLabel:{userName:"访客",message:"留言内容",time:"留言时间"}}}},getStatisticalTagInfo:function(){return{code:2e4,data:{tags:[{tagName:"Spring",tagUrl:"Spring",tagType:"warning"},{tagName:"SpringBoot",tagUrl:"SpringBoot",tagType:"danger"},{tagName:"JavaScript",tagUrl:"JavaScript",tagType:"info"},{tagName:"NodeJs",tagUrl:"NodeJs",tagType:"success"},{tagName:"VueJs",tagUrl:"VueJs",tagType:"danger"},{tagName:"Spring",tagUrl:"Spring",tagType:"warning"},{tagName:"Spring",tagUrl:"Spring",tagType:"danger"}]}}},getStatisticalLinkInfo:function(){return{code:2e4,data:{links:[{name:"百度一下",url:"http://www.baidu.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Github主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Github主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Github主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Github主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Github主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Github主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"},{name:"Gitee主页",url:"http://www.github.com"}]}}},getCarousel:function(){return{code:2e4,data:{images:[{id:"1001",src:"http://47.96.39.11:8080/image-base/myblog/article/1.jpg"},{id:"1002",src:"http://47.96.39.11:8080/image-base/myblog/article/2.jpg"},{id:"1003",src:"http://47.96.39.11:8080/image-base/myblog/article/3.jpg"},{id:"1004",src:"http://47.96.39.11:8080/image-base/myblog/article/4.jpg"},{id:"1005",src:"http://47.96.39.11:8080/image-base/myblog/article/5.jpg"}]}}},getGithubAuthUrl:function(e){return{code:2e4,data:{authorizeUrl:"https://gitee.com/oauth/authorize?client_id=8872dbc653839fed4df573e31b2f0e03b9883141f3a3f8d2c5447f4ec09b6dd8&response_type=code&state=1&redirect_uri="+e}}},getLoginInfo:function(e){return{code:2e4,data:{loginInfo:{gists_url:"https://gitee.com/api/v5/users/conghucai/gists{/gist_id}",repos_url:"https://gitee.com/api/v5/users/conghucai/repos",following_url:"https://gitee.com/api/v5/users/conghucai/following_url{/other_user}",bio:"别轻易倒下",created_at:"2021-10-19T15:16:53+08:00",remark:"",login:"conghucai",type:"User",blog:null,subscriptions_url:"https://gitee.com/api/v5/users/conghucai/subscriptions",weibo:null,updated_at:"2021-11-18T20:31:29+08:00",id:9887341,public_repos:4,email:null,organizations_url:"https://gitee.com/api/v5/users/conghucai/orgs",starred_url:"https://gitee.com/api/v5/users/conghucai/starred{/owner}{/repo}",followers_url:"https://gitee.com/api/v5/users/conghucai/followers",public_gists:0,url:"https://gitee.com/api/v5/users/conghucai",received_events_url:"https://gitee.com/api/v5/users/conghucai/received_events",watched:6,followers:0,avatar_url:"https://portrait.gitee.com/uploads/avatars/user/3295/9887341_conghucai_1634639623.png",events_url:"https://gitee.com/api/v5/users/conghucai/events{/privacy}",html_url:"https://gitee.com/conghucai",following:0,name:"ConghuCai",stared:1}}}},getUserInfo:function(){return{code:2e4,data:{userInfo:{bio:"别轻易倒下",created_at:"2021-10-19T15:16:53+08:00",login:"conghucai",email:null,watched:6,followers:0,avatar_url:"https://portrait.gitee.com/uploads/avatars/user/3295/9887341_conghucai_1634639623.png",html_url:"https://gitee.com/conghucai",name:"ConghuCai",stared:1}}}},messageAddRes:function(){return{code:2e4,data:{addRes:"success"}}},getArticleRes:function(){return{code:2e4,data:{articles:[{id:"1001",title:"2021-11-13 记录：Java连接远程Redis的报错信息和解决办法",abstract:"Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。",clickCount:213,likeCount:10,commentCount:8,shareCount:10,time:"2021-11-13 13:35:30",tag:["spring","springboot","vue","redis","spring","springboot","vue","redis","spring","springboot","vue","redis"],tagType:["info","warning","success","danger","info","warning","success","danger","info","warning","success","danger"],type:"Java",icon:"mouse"},{id:"1002",title:"2021-11-14 记录：Java连接远程Redis的报错信息和解决办法",abstract:"Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。",clickCount:213,likeCount:10,commentCount:8,shareCount:10,time:"2021-11-13 13:35:30",tag:["spring","springboot","vue","redis"],tagType:["info","warning","success","danger"],type:"Java",icon:"sunny"},{id:"1003",title:"2021-11-15 记录：Java连接远程Redis的报错信息和解决办法",abstract:"Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。",clickCount:213,likeCount:10,commentCount:8,shareCount:10,time:"2021-11-13 13:35:30",tag:["spring","springboot","vue","sql","mvc"],tagType:["info","warning","success","danger"],type:"Java",icon:"place"},{id:"1004",title:"2021-11-16 记录：Java连接远程Redis的报错信息和解决办法",abstract:"Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。",clickCount:213,likeCount:10,commentCount:8,shareCount:10,time:"2021-11-13 13:35:30",tag:["spring","springboot","vue","restful"],tagType:["info","warning","success","danger"],type:"Java",icon:"discover"},{id:"1005",title:"2021-11-17 记录：Java连接远程Redis的报错信息和解决办法",abstract:"Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。",clickCount:213,likeCount:10,commentCount:8,shareCount:10,time:"2021-11-13 13:35:30",tag:["spring","springboot","vue","redis"],tagType:["info","warning","success","danger"],type:"Java",icon:"trophy"}],totalItem:32,pageSize:5}}},getArticleRes1:function(){return{code:2e4,data:{articles:[{id:"1001",title:"2021-11-13 记录：Java连接远程Redis的报错信息和解决办法",abstract:"Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。",clickCount:213,likeCount:10,commentCount:8,shareCount:10,time:"2021-11-13 13:35:30",tag:["spring","springboot","vue","redis","spring","springboot","vue","redis","spring","springboot","vue","redis"],tagType:["info","warning","success","danger","info","warning","success","danger","info","warning","success","danger"],type:"Java",icon:"mouse"},{id:"1002",title:"2021-11-14 记录：Java连接远程Redis的报错信息和解决办法",abstract:"Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。",clickCount:213,likeCount:10,commentCount:8,shareCount:10,time:"2021-11-13 13:35:30",tag:["spring","springboot","vue","redis"],tagType:["info","warning","success","danger"],type:"Java",icon:"sunny"}],totalItem:32,pageSize:5}}},getArticle:function(e){return{code:2e4,data:{articlesInfo:{id:e,title:"2021-11-17 记录：Java连接远程Redis的报错信息和解决办法",abstract:"Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。Redis刚刚入门，用Java程序远程连接Redis，报了很多错误，许久才连上数据库。记录一下这些错误信息和引发原因、解决办法。",clickCount:213,likeCount:10,commentCount:8,shareCount:10,md:'---\r\ntypora-root-url: md_pic\r\n---\r\n\r\n# CRM开发日志\r\n\r\n## 10/18\t[Monday]  \r\n\r\n1. 【知识储备】**模板设计模式**：模板模式是GoF23种设计模式的其中一种，它的功能是将程序执行的流程或者算法的骨架搭建出来，里面具体的实现方式交给方法去做。\r\n\r\n   * 在Servlet继承体系中就有这种设计模式，Servlet父类将service方法执行流程的骨架搭建出来（判断是method是post还是get的流程），剩下的交给具体方法去做（doPost、doGet方法）。\r\n   * 【实际开发】在实际开发中，如果让一个单一的CURD功能对应到一个servlet，会导致servlet过多，相互之间的功能交叉，导致系统冗余、代码复用性不好。因此会**将一个模块都交给一个servlet去做**，servlet将这个模块的首先需要做的统一的业务流程搭建好，剩下不同的业务流程交给不同的方法去做。即：**模板设计模式**。\r\n\r\n2. 【数据库-表设计】非主键字段一般不会用int、double、datetime这些数据类型，而是**统一使用string/varchar**，因为操作方便。外键不会真的在数据库做出来，因为在查询时会导致多表联查，浪费系统资源，**外键关系只是项目编写时逻辑上的，而非底层物理上的**。\r\n\r\n3. 【数据库-表设计】主键字段的设计-UUID：\r\n\r\n   * 一般不会采用自增的int类型数据，因为这种自增方案相当于每次在插入数据时，都会在全表范围内搜寻最大的ID值（O(logn)操作），再进行插入操作，效率低下。\r\n   * 主键选择UUID字符串来保证其唯一性。因为机器生成的UUID是全球唯一的。随机数怕撞车、时间戳怕高并发，UUID则不存在这些问题。\r\n   * UUID由10字符+”-“+4字符+”-“+4字符+”-“+4字符+”-“+10字符组成：00000000-0000-0000-0000-000000000000，在使用时会str.placeAll()去掉其”-“，节省不必要的存储花销。\r\n\r\n4. 【javase-多线程】**ThreadLocal类管理Connection对象**，避免多线程访问Connection对象的安全问题：\r\n\r\n   * 什么是ThreadLocal类：在并发编程的时候，如果各个线程都在操作同一个变量，显然是不行的，这会引发线程安全问题。那么在有一种情况之下，我们需要满足这样一个条件：**变量是同一个，但是每个线程都只是使用同一个变量的一个新的副本**，在对这个变量操作时，只是维护好自己那个版本就好，这样就不存在线程安全问题了。\r\n\r\n   * ThreadLocal多线程的特点：**被共享的那个变量其实只有一个，但是大家都持有一个副本**，都只是对这个副本进行操作，变量本身存的值没有什么意义，因为大家用的都是副本。\r\n\r\n   * ThreadLocal管理Connection对象：\r\n\r\n     * ```java\r\n       public class ConnectionUtil {\r\n           private static ThreadLocal<Connection> tl = new ThreadLocal<Connection>();\r\n           private static Connection initConn = null;\r\n           static {//初始化initConn，这是一个单例的对象，只有一个\r\n               try {\r\n                   initConn = DriverManager.getConnection("***");\r\n               } catch (SQLException e) {\r\n                   e.printStackTrace();\r\n               }\r\n           }\r\n       \r\n           public Connection getConn() {\r\n               Connection c = tl.get();\t//ThreadLocal的get方法拿副本\r\n               if(null == c) tl.set(initConn);\t//如果conn对象还没放进ThreadLocal中，就把它放进去(set)\r\n               return tl.get();\r\n           }\r\n           \r\n           public void close(Connection conn){\r\n               if(conn != null ){\r\n                   conn.close();\r\n                   tl.remove();\t//一定要手动remove！非常重要！\r\n               }\r\n           }\r\n       }\r\n       ```\r\n\r\n       这样大家拿到的都是同一个连接对象的副本，只有一个连接对象但是每个连接都是新的。配合单例对象，很好地单例对象的解决多线程安全问题。\r\n\r\n   * ThreadLocal原理简述：\r\n\r\n     * ThreadLocal是Java中所提供的**线程本地存储机制**，可以利用这个机制**将线程共享的数据存储在线程内部**。线程可以在任何时刻和任意方法中获取存储的数据。其提供的方法包括get set remove\r\n     * **ThreadLocal底层通过ThreadLocalMap来实现**，每个Thread对象都存在一个ThreadLocalMap，其中**Map的key为ThreadLocal**，val为需要缓存的值。\r\n     * 在**线程池**中的线程由于不会被回收，在这种线程中**使用ThreadLoca会造成内存泄漏**。当ThreadLocal对象使用完成后，应该把设置的key、val也就是Entru对象回收掉，但是线程池中线程不会被回收，而线程对象通过强引用指向ThreadLocalMap，ThreadLocalMap也通过强引用指向Entry对象，线程不被回收，Entry也一直不被回收，从而造成内存泄漏问题。解决方法是在**使用完ThreadLocal对象后，手动调用remove方法将其手动清除，保证线程是纯净的**。\r\n     * ThreadLocal**经典应用场景就是连接管理**，多个线程使用同一个连接对象，线程之间不共享同一个对象。\r\n\r\n5. 【代理模式/单一职责开发原则】开发过程中，持久层使用动态代理访问业务层，并进行事务操作：业**务处理不应该混杂持久层的税务操作，只应该关注其业务逻辑本身**（单一职责开发原则）。因此我们需要将业务逻辑中的**事务操作部分抽象出来，而使用代理类去访问不同的业务处理类**（代理模式）。而业务处理多种多样，如何才能用一个方法去代理所有的业务逻辑？——动态代理。\r\n\r\n   ```java\r\n   public class TransactionInvocationHandler implements InvocationHandler {\r\n       private Object target;\r\n   \r\n       public TransactionInvocationHandler(Object target) {\r\n           this.target = target;   //目标对象\r\n       }\r\n   \r\n       @Override\r\n       public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\r\n           SqlSession sqlSession = null;\r\n           Object obj = null;\r\n           try{\r\n               sqlSession = SqlSessionUtil.getSqlSession();\r\n               //调用目标对象的方法，处理业务逻辑\r\n               obj = method.invoke(target, args);\r\n               //调用完成后提交事务\r\n               sqlSession.commit();\r\n   \r\n           }catch (Exception e){\r\n               if(sqlSession != null)\r\n                   sqlSession.rollback();\r\n               e.printStackTrace();\r\n           }finally {\r\n               SqlSessionUtil.close(sqlSession);\r\n           }\r\n   \r\n           //返回处理结果\r\n           return obj;\r\n       }\r\n   \r\n       public Object getProxy(){\r\n           //返回动态代理对象\r\n           return Proxy.newProxyInstance(target.getClass().getClassLoader(), target.getClass().getInterfaces(), this);\r\n       }\r\n   }\r\n   ```\r\n\r\n   * 业务处理过程中，Dao层访问数据库，Service层调用Dao层实现类处理业务，使用Service层对象时需要使用动态代理类。\r\n\r\n     ```java\r\n     /**\r\n     * 一个业务处理实现类的设计，主要是调用dao层对象完成的。\r\n     */\r\n     public class StudentServiceImpl implements StudentService {\r\n         private StudentDao studentDao = new StudentDaoImpl();\r\n     \r\n         @Override\r\n         public Student getById(String id) {\r\n             Student s = studentDao.getById(id);\r\n             return s;\r\n         }\r\n     \r\n         @Override\r\n         public void save(Student s) {\r\n             studentDao.save(s);\r\n         }\r\n     }\r\n     \r\n     \r\n     /**\r\n     * 使用动态代理访问业务层实现类对象\r\n     */\r\n     public class Test1 {\r\n     \r\n         public static void main(String[] args) {\r\n             StudentService ss = (StudentService) ServiceFactory.getService(new StudentServiceImpl());\t//使用动态代理访问业务层对象，完成业务提交\r\n     \r\n             Student s = ss.getById("A0001");\r\n             System.out.println(s);\r\n     \r\n         }\r\n     }\r\n     ```\r\n\r\n   * 重复一遍：在业务层使用动态代理是为了**将事务管理从业务层中抽取出来**，符合单一业务原则和MVC架构原则。\r\n   \r\n6. 【MyBatis】使用MyBatis对dao层动态代理的支持：\r\n\r\n   * 在Mapper.xml中将namespace设置为UserDao.java接口的全限定名\r\n   * 将Mapper.xml中statement的id和UserDao.java接口的方法名保持一致。\r\n   * 将Mapper.xml中statement的parameterType和UserDao.java接口的方法输入参数类型保持一致\r\n   * 将Mapper.xml中statement的resultType和UserDao.java接口的方法输出结果类型保持一致\r\n   * 注意结合业务层动态代理提交事务\r\n\r\n\r\n\r\n## 10/19 [Tuesday]\t\r\n\r\n1. 【MyBatis】resultType，查询返回多个数值的情况下，有两种设置方案：\r\n\r\n   * resultType = domian对象，用domian对象接收多个值，注意对象的属性名必须和查询到的列表名一模一样。\r\n   * resultType = map，用HashMap/Map接收，得到的是一个Map集合的List，List的每一个Map是一列结果，Map的key是列名，value是列值。这种情况主要用于domian对象接受不了的情况。比如：带聚合函数的分组查询多表联查这种。用于需求量不高的情况，做一个临时救火的角色。\r\n   * resultType = vo对象。vo即Value Object，作用是把某个指定的所有数据封装起来。它存在的意义就是封装数据，针对一些前端需求量较高、需要反复用这个对象封装数据的情况。\r\n\r\n2. 【git命令】 在需要上传仓库的【工作区】的根目录下使用git命令\r\n\r\n   * git init\t初始化本地库、暂存区\r\n\r\n   * git config   --global user.name     系统用户级别设置签名 (项目级别不带--global)\r\n\r\n     git config   --global user.email\r\n\r\n   * git add X    将X文件/文件夹上传暂存区，*\\\\.\\A代表上传工作区所有文件\r\n   \r\n   * git commit   暂存区提交本地仓库\r\n   \r\n   * git remote add name url   添加远程仓库（注意url在windows系统下不要ctrl v 不然会有异常符号被写进去）\r\n   \r\n   * git push origin:master   推送到远程仓库origin下的master分支下\r\n   \r\n3. 【数据库-char和varchar】在字段长度已经完全确定的情况下，使用char效率远高于varchar。比如常用的两种日期字符串：yyyy-mm-dd(10); yyyy-mm-dd hh:mm:ss(19)就只需要使用char就行。\r\n\r\n\r\n\r\n## 10/20 [Wednesday]\r\n\r\n1. MVC架构之间各种角色的配合：\r\n\r\n\t* 对于前端发送来的请求，Controller进行接收和判断请求类型，并调用相应的Model进行业务处理。\r\n\t* Model的业务处理主要注重业务处理的逻辑，需要涉及的数据库交互交给Dao来实现。\r\n\t* Dao提供操作数据库接口。\r\n\t* 根据Model业务处理的结果，View生成需要展示的内容，由Controller响应给前端用户。\r\n2. Dao层只定义接口。\r\n    * 使用MyBatis框架提供的动态代理机制，通过Dao定义的接口和MapperXml文件，得到Dao接口的实现对象。\r\n3. Service层的类全部定义成接口的实现类\r\n    * 由于涉及到了数据库操作，因此需要在业务处理结束后进行数据库的commit或异常的rollback。\r\n    * commit和rollback操作本身不是Service层需要关系的事情。\r\n    * 因此需要为Service层对象提供动态代理对象，由代理对象来完成commit和rollback的功能增强。\r\n    * 项目使用jdk动态代理，这就要求Service层对象必须实现接口。\r\n\r\n## 10/21 [Thursday]\r\n\r\n1. 【jsp和session作用域】JSP会自动为接入进来的浏览器分配session对象，因此在进行是否登录的filter时不应该判断session是否为空，而应该以session字段里面的字段是否存在来判断。\r\n2. 【mvc模式】对于domian不存在，但是在数据库、dao、controller、service、前端之间传递需求量特别大的数据对象，一般不用map封装，定义单独的类，即vo对象。\r\n\r\n## 10/22 [Friday]\r\n\r\n1. 【servlet】接收前端发来的同一个参数名下的多个参数，使用req.getParameterValues("ids");\r\n\r\n2. 【数据库】由后端来完成级联删除操作。先删子表记录，再删主表记录。\r\n\r\n   * 由于可能涉及多个更新操作，所以再删除之前先查一下有多少记录是需要删除的，删完之后做一个比对，确保需要做的操作都做了。\r\n\r\n3. 【Jquery】对于动态生成的元素，无法用原生js对其绑定事件的。使用\r\n\r\n   `$(需要绑定元素的有效的外层元素).on(绑定事件的方式,需要绑定的元素的jquery对象,回调函数)`\r\n\r\n4. 【Jquery】\\<textarea>标签虽然内容卸载标签对之间，没有value属性，但是其仍然属于表单标签，使用jq的.val()取值，而非.html()。\r\n\r\n',time:"2021-11-23 11:12:13",author:"ConghuCai",avatar_url:"http://47.96.39.11:8080/image-base/myblog/home/front.jpg",type:"Java",url_name:"java",tags:["Mybatis","Sql","XXX","LocalThread"],tagType:["info","warning","success","danger"]}}}},commentAddRes:function(){return{code:2e4,data:{res:"success"}}},getCommentsList:function(){return{code:2e4,data:{comments:[{user:"conghucai",avatar_url:"http://47.96.39.11:8080/image-base/myblog/home/front.jpg",content:"冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲",time:"2021-11-23"},{user:"conghucai",avatar_url:"https://portrait.gitee.com/uploads/avatars/user/3295/9887341_conghucai_1634639623.png",content:"冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲",time:"2021-11-23"},{user:"conghucai",avatar_url:"http://47.96.39.11:8080/image-base/myblog/home/zhangteng.jpg",content:"冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲",time:"2021-11-23"},{user:"conghucai",avatar_url:"http://47.96.39.11:8080/image-base/myblog/home/front.jpg",content:"冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲",time:"2021-11-23"},{user:"conghucai",avatar_url:"http://47.96.39.11:8080/image-base/myblog/home/front.jpg",content:"冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲",time:"2021-11-23"}],pageSize:4}}},getCategoryInfo:function(){return{code:2e4,data:{categoryInfo:{name:"Java",time:"2021-11-25",avatar:"http://47.96.39.11:8080/image-base/myblog/category/java.png",intro:"Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。",count:5}}}},getAboutInfo:function(){return{code:2e4,data:{aboutInfo:{intro:"这是一个私人博客项目，项目采用前后端分离开发方法，后端使用微服务框架开发完成。技术栈包括SpringBoot，MyBatis，MySql，Redis，Tomcat，VueJs，NodeJs等。并在开发中融入了REST架构、Oauth2授权等技术架构。<br>网站采用前后端分离+微服务框架的设计理念，前后端的服务器和代码完全分离，后端采用Springboot框架实现微服务设计。<br>代码计划在Github和Gitee平台上开源。",urlGitee:"https://gitee.com/conghucai",urlGithub:"https://gitee.com/conghucai"}}}}};a.a.mock("/api/home/carousel",o.getCarousel),a.a.mock(RegExp("/api/auth/gitee.*"),o.getGithubAuthUrl("http://192.168.0.9:31415/")),a.a.mock(RegExp("/api/auth/login.*"),o.getLoginInfo),a.a.mock(RegExp("/api/auth/user.*"),o.getUserInfo),a.a.mock(RegExp("/api/article/list/.*page=7"),o.getArticleRes1),a.a.mock(RegExp("/api/article/list/category/.*"),o.getArticleRes),a.a.mock(RegExp("/api/article/list/tag/.*"),o.getArticleRes),a.a.mock(RegExp("/api/article/list/search/.*"),o.getArticleRes),a.a.mock(RegExp("/api/article/list/about/.*"),o.getArticleRes),a.a.mock(RegExp("/api/article/list/all.*"),o.getArticleRes),a.a.mock(RegExp("/api/article/content/.*"),o.getArticle(1001)),a.a.mock(RegExp("/api/article/like/.*"),(function(){console.log("点赞")})),a.a.mock(RegExp("/api/article/share.*"),(function(){console.log("分享")})),a.a.mock(RegExp("/api/article/comment/list/.*"),o.getCommentsList),a.a.mock(RegExp("/api/article/comment/add.*"),o.commentAddRes),a.a.mock(RegExp("/api/category/info/.*"),o.getCategoryInfo),a.a.mock(RegExp("/api/about/info"),o.getAboutInfo)}});
//# sourceMappingURL=app.c625f80a.js.map